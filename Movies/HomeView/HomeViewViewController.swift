//
//  HomeViewViewController.swift
//  PeliculasNewTiss
//
//  Created Administrator on 12/04/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class HomeViewViewController: UIViewController, UICollectionViewDataSource, UICollectionViewDelegate {
 

    //MARK: - Protocol Properties
	var presenter: HomeViewPresenterProtocol?
    
    //MARK: - Properties
    private var data : Movies?
    let items = ["Popular","Top Rated","On Tv", "Airing Today"]
    
//    private var NavigationBar: UINavigationItem = {
//        var tolbar = UINavigationItem()
//        return tolbar
//    }()
//    private var collectionView: UICollectionView?
    
    private let stackViewSegmented: UIStackView = {
        let stackView = UIStackView()
        stackView.backgroundColor = UIColor(named: "background")
        return stackView
    }()
    
    lazy var collectionView: UICollectionView = {
        let collectionView = UICollectionView()
        collectionView.translatesAutoresizingMaskIntoConstraints = false
        return collectionView
    }()
    
    lazy var segmentedControl: UISegmentedControl = {
        let controlSegmen = UISegmentedControl(items: items)
        controlSegmen.selectedSegmentIndex = 0
        controlSegmen.selectedSegmentTintColor = .gray
        controlSegmen.layer.cornerRadius = 10
        controlSegmen.layer.borderWidth = 1
//        controlSegmen.layer.masksToBounds = true
        controlSegmen.layer.borderColor = UIColor.darkGray.cgColor
        controlSegmen.tintColor = UIColor.gray
        controlSegmen.backgroundColor = .darkGray
        controlSegmen.addTarget(self, action: #selector(segmenControl), for: .valueChanged)
        return controlSegmen
    }()

    
    //MARK: - Life Cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        title = "TV Shows"
        view.backgroundColor = UIColor(named: "MoviesNavigater")
        initUi()
        presenter?.getData(moviType: .popular)
       
    
    }
    
    //MARK: - Methods

    func initUi(){
        self.navigationItem.rightBarButtonItem = UIBarButtonItem(image: UIImage(systemName: "person.circle"), style: .done, target: self, action: #selector(singOff))
        navigationController?.navigationBar.tintColor = .white
    
        
        stackViewSegmented.addSubview(segmentedControl)
        segmentedControl.addAnchorsAndSize(width: nil, height: 30, left: 12, top: 10, right: 12, bottom: nil)
        view.addSubview(stackViewSegmented)
        stackViewSegmented.addAnchorsAndSize(width: nil, height: 50, left: 0, top: 95, right: 0, bottom: nil)

        let layout = UICollectionViewFlowLayout()
        layout.scrollDirection = .vertical
        layout.minimumLineSpacing = 5
        layout.minimumInteritemSpacing = 5
//        layout.itemSize = CGSize(width: (view.frame.size.width/2)-4, height: (view.frame.size.width/3)-4)
        layout.itemSize = CGSize(width: width/2.05, height: 400)

        collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)

//        guard let collectionView = collectionView else{
//            return
//        }
        collectionView.register(CustomCollectionViewCell.self, forCellWithReuseIdentifier: CustomCollectionViewCell.identifier)
        collectionView.dataSource = self
        collectionView.delegate = self
        view.addSubview(collectionView)
        collectionView.addAnchorsAndSize(width: nil, height: nil, left: 0, top: 0, right: 0, bottom: 0,withAnchor: .top,relativeToView: stackViewSegmented)
//        collectionView.frame = view.bounds
        collectionView.backgroundColor = UIColor(named: "background")
    }
    
    @objc fileprivate func segmenControl(_ sender: UISegmentedControl){
        switch sender.selectedSegmentIndex {
        case 0:
            presenter?.getData(moviType: .popular)
        case 1:
            presenter?.getData(moviType: .topRated)
        case 2:
            presenter?.getData(moviType: .nowPlaying)
        case 3:
            presenter?.getData(moviType: .upcoming)
        default:
            presenter?.getData(moviType: .popular)
        }
    }
}

//MARK: - View Methods
extension HomeViewViewController: HomeViewViewProtocol {
    func info(peli: Movies) {
        data = peli
        collectionView.reloadData()
        print("aquie esta la variable data :::::::::::: ......... \(data)")
        
    }
}

//MARK: - Private functions
extension HomeViewViewController {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
       return data?.results?.count ?? 0
//        print("numero de celdas collectionView :::::::::::::::::: \(data?.results?.count)")
//        return 10
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: CustomCollectionViewCell.identifier, for: indexPath) as! CustomCollectionViewCell
        guard let resul = data?.results else {return cell}
        cell.configure(model: resul[indexPath.row])
        cell.contentView.layer.cornerRadius = 20
        cell.layer.masksToBounds = true
        return cell
    }
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        print("celda seleccionada")
        guard let peliculaSeleccionada = data?.results?[indexPath.row].id else {return}
        print("este es el id de la pelicula seleccionada \(peliculaSeleccionada)")
        presenter?.detailPeli(dato: peliculaSeleccionada)
   
    }
    
    @objc func singOff(){
        presenter?.singOff()
    }
}
